
-- Фильмы
CREATE TABLE IF NOT EXISTS films (
	film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	description VARCHAR(200),
	release_date DATE NOT NULL,
	duration INTEGER,
	rate INTEGER,
    mpa_id INTEGER
);

-- MPA рейтинги фильмов
CREATE TABLE IF NOT EXISTS mpa (
	mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL
);

-- Все жанры
CREATE TABLE IF NOT EXISTS genre (
    id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

-- Жанры фильмов
CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER NOT NULL REFERENCES films(film_id),
    genre_id INTEGER NOT NULL REFERENCES genre(id),
    PRIMARY KEY (film_id, genre_id)
);

-- Пользователи
CREATE TABLE IF NOT EXISTS users (
	user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email VARCHAR(50) NOT NULL,
	login VARCHAR(50) NOT NULL,
	name VARCHAR(50) NOT NULL,
	birthday DATE NOT NULL
);

-- Статусы дружбы
CREATE TABLE IF NOT EXISTS friendship (
	user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
	friend_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (user_id, friend_id)
);

-- Лайки фильмам
CREATE TABLE IF NOT EXISTS likes_film (
	film_id INTEGER REFERENCES films(film_id),
	user_id INTEGER REFERENCES users(user_id),
    PRIMARY KEY(film_id, user_id)
);